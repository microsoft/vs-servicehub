parameters:
- name: ArchiveSymbols
  type: boolean
  default: true
- name: RealSign
  displayName: Real sign?
  type: boolean
- name: PackagePush
  type: boolean
  default: true

stages:
- ${{ if or(parameters.ArchiveSymbols, parameters.PackagePush) }}:
  - stage: release
    displayName: Publish
    jobs:
    - ${{ if parameters.ArchiveSymbols }}:
      - job: symbol_archive
        displayName: Archive symbols
        pool: VSEngSS-MicroBuild2022-1ES
        steps:
        - checkout: none
        - download: current
          artifact: Variables-Windows
          displayName: üîª Download Variables-Windows artifact
        - powershell: $(Pipeline.Workspace)/Variables-Windows/_pipelines.ps1
          displayName: ‚öôÔ∏è Set pipeline variables based on artifacts
        - download: current
          artifact: symbols-legacy
          displayName: üîª Download symbols-legacy artifact
        - task: MicroBuildArchiveSymbols@5
          displayName: üî£ Archive symbols to Symweb
          inputs:
            SymbolsFeatureName: $(SymbolsFeatureName)
            SymbolsProject: VS
            SymbolsAgentPath: $(Pipeline.Workspace)/symbols-legacy

    - ${{ if parameters.PackagePush }}:
      - job: push
        ${{ if parameters.RealSign }}:
          displayName: azure-public/vssdk feed
        ${{ else }}:
          displayName: devdiv/vs-impl feed # Leave this as-is, since non-signed builds must not be pushed to public feeds.
        ${{ if parameters.ArchiveSymbols }}:
          dependsOn: symbol_archive
        pool:
          name: AzurePipelines-EO
          demands:
          - ImageOverride -equals 1ESPT-Ubuntu22.04
          os: Linux
        templateContext:
          outputs:
          - output: nuget
            displayName: üì¶ Push nuget packages
            packagesToPush: '$(Pipeline.Workspace)/deployables-Windows/NuGet/*.nupkg'
            packageParentPath: $(Pipeline.Workspace)/deployables-Windows/NuGet
            allowPackageConflicts: true
            ${{ if parameters.RealSign }}:
              nuGetFeedType: external
              publishFeedCredentials: azure-public/vssdk
            ${{ else }}:
              nuGetFeedType: internal
              publishVstsFeed: vs-impl # Leave this as-is, since non-signed builds must not be pushed to public feeds.
        steps:
        - checkout: none
        - download: current
          artifact: Variables-Windows
          displayName: üîª Download Variables-Windows artifact
        - powershell: $(Pipeline.Workspace)/Variables-Windows/_pipelines.ps1
          displayName: ‚öôÔ∏è Set pipeline variables based on artifacts
        - download: current
          artifact: deployables-Windows
          displayName: üîª Download deployables-Windows artifact
        - ${{ if parameters.RealSign }}:
          - template: WIFtoPATauth.yml
            parameters:
              wifServiceConnectionName: azure-public/vside package push
              deadPATServiceConnectionId: 42175e93-c771-4a4f-a132-3cca78f44b3b # azure-public/vssdk
          - template: WIFtoPATauth.yml
            parameters:
              wifServiceConnectionName: azure-public/vside package push
              deadPATServiceConnectionId: 52ae7e6c-4251-4fe5-9ef1-0e59cecf0e84 # azure-public/vssdk NPM
          - template: npm_push.yml
            parameters:
              tgzDir: $(Pipeline.Workspace)/deployables-Windows/npm
              feedName: azure-public/vssdk
              feedUrl: https://pkgs.dev.azure.com/azure-public/vside/_packaging/vssdk/npm/registry/
              service_connection: azure-public/vssdk NPM
